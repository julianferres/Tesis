@misc{ACTUS_Dictionary,
  author       = {ACTUS},
  howpublished = {\url{https://github.com/actusfrf/actus-dictionary/blob/master/actus-dictionary.json}},
  month        = Jun,
  note         = {Online; accessed 26 May 2022},
  title        = {ACTUS Dictionary Terms},
  year         = {2019}
}
@misc{ACTUS_Dictionary_Events,
  author       = {ACTUS},
  howpublished = {\url{https://github.com/actusfrf/actus-dictionary/blob/master/actus-dictionary-event-types.json}},
  month        = Aug,
  note         = {Online; accessed 17 April 2022},
  title        = {ACTUS Dictionary Events},
  year         = {2019}
}
@misc{ACTUS_Dictionary_States,
  author       = {ACTUS},
  howpublished = {\url{https://github.com/actusfrf/actus-dictionary/blob/master/actus-dictionary-states.json}},
  month        = Jun,
  title        = {ACTUS Dictionary States},
  year         = {2019}
}
@misc{ACTUS_Dictionary_Terms,
  author       = {ACTUS},
  howpublished = {\url{https://github.com/actusfrf/actus-dictionary/blob/master/actus-dictionary-terms.json}},
  month        = Jun,
  title        = {ACTUS Dictionary Terms},
  year         = {2019}
}
@misc{ACTUS_Taxonomy,
  author       = {ACTUS},
  howpublished = {\url{https://www.actusfrf.org/taxonomy}},
  month        = Jun,
  title        = {ACTUS Taxonomy},
  year         = 2019
}
@misc{ACTUS_Techspecs,
  author       = {ACTUS},
  howpublished = {\url{https://www.actusfrf.org/techspecs}},
  month        = Nov,
  title        = {ACTUS Technical Specification},
  year         = {2018}
}
@misc{ACTUS_Tests,
  author       = {ACTUS},
  howpublished = {\url{https://github.com/actusfrf/actus-tests/}},
  month        = Jun,
  title        = {ACTUS test cases},
  year         = 2019
}
@misc{Algebraic_data_type,
  author       = {HaskellWiki},
  day          = 6,
  howpublished = {\url{https://wiki.haskell.org/Algebraic_data_type}},
  month        = May,
  note         = {Online; accessed 30 April 2022},
  time         = {12:07},
  title        = {Algebraic data type},
  year         = {2020}
}
@inproceedings{bhargavan:hal-01400469,
  address     = {Vienna, Austria},
  author      = {Bhargavan, Karthikeyan and Delignat-Lavaud, Antoine and Fournet, C{\'e}dric and Gollamudi, Anitha and Gonthier, Georges and Kobeissi, Nadim and Kulatova, Natalia and Rastogi, Aseem and Sibut-Pinote, Thomas and Swamy, Nikhil and Zanella-B{\'e}guelin, Santiago},
  booktitle   = {{ACM Workshop on Programming Languages and Analysis for Security}},
  doi         = {10.1145/2993600.2993611},
  hal_id      = {hal-01400469},
  hal_version = {v1},
  keywords    = {Cryptocurrencies ; Formal methods Computer science ; Formal verification},
  month       = Oct,
  pdf         = {https://hal.inria.fr/hal-01400469/file/solidether.pdf},
  title       = {{Formal Verification of Smart Contracts: Short Paper}},
  url         = {https://hal.inria.fr/hal-01400469},
  year        = {2016}
}
@misc{cardano_docs,
  author       = {IOHK},
  howpublished = {\url{https://docs.cardano.org/}},
  title        = {Documentation for the Cardano ecosystem},
  year         = {2015}
}
@misc{cardano_utxo_ledger,
  author = {Corduan, Jared and Vinogradova, Polina and Gudemann, Matthias},
  title  = {A Formal Specification of the Cardano Ledger},
  url    = {http://cardano-universe.com/wp-content/uploads/2019/02/ledger-spec.pdf},
  year   = {2019}
}
@misc{auction_haskell,
  author       = {IOHK},
  howpublished = {\url{https://github.com/input-output-hk/marlowe/blob/master/src/Language/Marlowe/Examples/Auction.hs}},
  title        = {Auction contract, written in Haskell for the Cardano Blockchain},
  year         = {2019}
}

@misc{cardano_website,
  author       = {Cardano},
  howpublished = {\url{https://cardano.org/}},
  title        = {Cardano Official Website},
  year         = {2019}
}
@article{CASC_competition,
  abstract   = {The CADE ATP system competition (CASC) is an annual evaluation of fully automatic, first order Automated Theorem Proving (ATP) systems. CASC-21 was the twelfth competition in the CASC series. Twenty ATP systems and system variants competed in the various competition and demonstration divisions. An outline of the competition design, and a commentated summary of the results, are presented.},
  address    = {NLD},
  author     = {Sutcliffe, Geoff},
  doi        = {10.5555/1365980.1365989},
  issn       = {0921-7126},
  issue_date = {January 2008},
  journal    = {AI Commun.},
  keywords   = {Competition, automated theorem proving},
  month      = {jan},
  number     = {1},
  numpages   = {11},
  pages      = {71-81},
  publisher  = {IOS Press},
  title      = {The CADE-21 Automated Theorem Proving System Competition},
  volume     = {21},
  year       = {2008}
}

@article{composing-contracts,
  author    = {Peyton Jones, Simon and Eber, Jean-Marc and Seward, Julian},
  journal   = {ACM SIGPLAN Notices},
  number    = {9},
  pages     = {280--292},
  publisher = {ACM New York, NY, USA},
  title     = {Composing contracts: an adventure in financial engineering (functional pearl)},
  volume    = {35},
  year      = {2000}
}

@book{concrete_semantics,
  abstract  = {Part I of this book is a practical introduction to working with the Isabelle proof assistant. It teaches you how to write functional programs and inductive definitions and how to prove properties about them in Isabelles structured proof language. Part II is an introduction to the semantics of imperative languages with an emphasis on applications like compilers and program analysers. The distinguishing feature is that all the mathematics has been formalised in Isabelle and much of it is executable. Part I focusses on the details of proofs in Isabelle; Part II can be read even without familiarity with Isabelles proof language, all proofs are described in detail but informally. The book teaches the reader the art of precise logical reasoning and the practical use of a proof assistant as a surgical tool for formal proofs about computer science artefacts. In this sense it represents a formal approach to computer science, not just semantics. The Isabelle formalisation, including the proofs and accompanying slides, are freely available online, and the book is suitable for graduate students, advanced undergraduate students, and researchers in theoretical computer science and logic.},
  author    = {Nipkow, Tobias and Klein, Gerwin},
  isbn      = {3319105418},
  publisher = {Springer Publishing Company, Incorporated},
  title     = {Concrete Semantics: With Isabelle/HOL},
  year      = {2014}
}

@inproceedings{efficient-static-analysis-marlowe-isabelle,
  author       = {Lamela Seijas, Pablo and Smith, David and Thompson, Simon},
  booktitle    = {International Symposium on Leveraging Applications of Formal Methods},
  organization = {Springer},
  pages        = {161--177},
  title        = {Efficient static analysis of Marlowe contracts},
  year         = {2020}
}

@book{fowler2010dsl,
  author    = {Fowler, Martin},
  publisher = {Pearson Education},
  title     = {Domain-specific languages},
  year      = {2010}
}

@misc{functions-isabelle,
  author       = {Krauss, Alexander},
  howpublished = {\url{https://isabelle.in.tum.de/doc/functions.pdf}},
  title        = {Defining recursive functions in Isabelle/HOL},
  year         = {2008}
}

@inproceedings{history_of_Interactive_Theorem_Proving,
  author    = {Harrison, John and Urban, Josef and Wiedijk, Freek},
  booktitle = {Computational Logic},
  doi       = {10.1016/B978-0-444-51624-4.50004-6},
  isbn      = {9780444516244},
  journal   = {Handbook of the History of Logic},
  pages     = {135--214},
  title     = {History of Interactive Theorem Proving.},
  volume    = {9},
  year      = {2014}
}

@article{Hitchhiker_amd,
  author  = {Russinoff, David},
  doi     = {10.1023/A:1008669628911},
  journal = {Formal Methods in System Design},
  month   = {01},
  pages   = {75-125},
  title   = {A Mechanically Checked Proof of Correctness of the AMD K5 Floating Point Square Root Microcode},
  volume  = {14},
  year    = {1999}
}

@inproceedings{Hitchhiker_intel,
  author    = {Harrison, J.},
  booktitle = {18th Annual IEEE Symposium of Logic in Computer Science, 2003. Proceedings.},
  doi       = {10.1109/LICS.2003.1210044},
  number    = {},
  pages     = {45-54},
  title     = {Formal verification at Intel},
  volume    = {},
  year      = {2003}
}

@inproceedings{implementing_financial_contracts_on_blockchain,
  abstract  = {Marlowe is a DSL for financial contracts. We describe the implementation of Marlowe on the Cardano blockchain, and the Marlowe Playground web-based development and simulation environment.},
  address   = {Cham},
  author    = {Lamela Seijas, Pablo
               and Nemish, Alexander
               and Smith, David
               and Thompson, Simon},
  booktitle = {Financial Cryptography and Data Security},
  editor    = {Bernhard, Matthew
               and Bracciali, Andrea
               and Camp, L. Jean
               and Matsuo, Shin'ichiro
               and Maurushat, Alana
               and R{\o}nne, Peter B.
               and Sala, Massimiliano},
  isbn      = {978-3-030-54455-3},
  pages     = {496--511},
  publisher = {Springer International Publishing},
  title     = {Marlowe: Implementing and Analysing Financial Contracts on Blockchain},
  year      = {2020}
}

@misc{marlowe_playground,
  author       = {IOHK},
  howpublished = {\url{https://play.marlowe-finance.io/doc/marlowe/tutorials/escrow-ex.html}},
  title        = {Playground for the simulations of contracts written in Marlowe},
  year         = {2021}
}

@misc{marlowe-cardano-github,
  author       = {IOHK},
  day          = {13},
  howpublished = {\url{https://github.com/input-output-hk/marlowe-cardano}},
  month        = Nov,
  note         = {Online; accessed 26 May 2022},
  title        = {Marlowe Cardano Repository},
  year         = {2016}
}

@misc{marlowe-isabelle-repo,
  author       = {IOHK},
  howpublished = {\url{https://github.com/input-output-hk/marlowe/tree/master/isabelle}},
  month        = Oct,
  title        = {Marlowe's proofs in Isabelle, Github repository},
  year         = {2019}
}

@misc{marlowe-language-repo,
  author       = {IOHK},
  howpublished = {\url{https://github.com/input-output-hk/marlowe-cardano/tree/main/marlowe-actus/src/}},
  month        = Jul,
  title        = {Marlowe-actus Github repository},
  year         = {2020}
}

@book{ML_programming_language,
  address   = {USA},
  author    = {Ullman, Jeffrey D.},
  doi       = {10.5555/180894},
  isbn      = {0131848542},
  publisher = {Prentice-Hall, Inc.},
  title     = {Elements of ML Programming},
  year      = {1994}
}

@article{monotonicity_inference_for_hol,
  abstract = {Formulas are often monotonic in the sense that satisfiability for a given domain of discourse entails satisfiability for all larger domains. Monotonicity is undecidable in general, but we devised three calculi that infer it in many cases for higher-order logic. The third calculus has been implemented in Isabelle's model finder Nitpick, where it is used both to prune the search space and to soundly interpret infinite types with finite sets, leading to dramatic speed and precision improvements.},
  author   = {Blanchette, Jasmin Christian
              and Krauss, Alexander},
  day      = {01},
  doi      = {10.1007/s10817-011-9234-1},
  issn     = {1573-0670},
  journal  = {Journal of Automated Reasoning},
  month    = {Dec},
  number   = {4},
  pages    = {369-398},
  title    = {Monotonicity Inference for Higher-Order Formulas},
  url      = {https://doi.org/10.1007/s10817-011-9234-1},
  volume   = {47},
  year     = {2011}
}

@article{multi-party-contracts,
  author    = {Bahr, Patrick and Berthold, Jost and Elsman, Martin},
  journal   = {ACM SIGPLAN Notices},
  number    = {9},
  pages     = {315--327},
  publisher = {ACM New York, NY, USA},
  title     = {Certified symbolic management of financial multi-party contracts},
  volume    = {50},
  year      = {2015}
}

@misc{nakamoto2008bitcoin,
  author = {Satoshi Nakamoto},
  month  = {Dec},
  note   = {Accessed: 2015-07-01},
  title  = {Bitcoin: A Peer-to-Peer Electronic Cash System},
  url    = {https://bitcoin.org/bitcoin.pdf},
  year   = {2008}
}

@book{plutus-smart-contracts,
  abstract     = {This practical ebook is a guide to programming with the Plutus language for highly secure smart contracts on the Cardano blockchain, home of the ada cryptocurrency. Plutus is based on the Haskell functional programming language and comes complete with a full testing environment accessed via GitHub or any browser.
                  The ebook will help you get to grips with using smart contracts on a blockchain by providing real-life examples and functional sample code. Plutus: Writing Reliable Smart Contracts is the first ebook about this new and exciting language and is written by experts from IOHK, the developers of Cardano and ada.               
                  This ebook is concise and focused and uses sample scenarios to help the reader grasp the concepts of this new language. The pitch and flow of this book makes it appealing and is it easy to navigate through the samples which get progressively more complex.},
  author       = {Br{\"{u}}njes, Lars and  Vinogradova, Polina},
  howpublished = {\url{https://leanpub.com/plutus-smart-contracts}},
  publisher    = {IOHK},
  title        = {Plutus: Writing reliable smart contracts},
  url          = {\url{https://leanpub.com/plutus-smart-contracts}},
  year         = {2019}
}

@incollection{pof_ouroboros,
  abstract   = {We present {\textquotedblleft}Ouroboros,{\textquotedblright} the first blockchain protocol based on proof of stake with rigorous security guarantees. We establish security properties for the protocol comparable to those achieved by the bitcoin blockchain protocol. As the protocol provides a {\textquotedblleft}proof of stake{\textquotedblright} blockchain discipline, it offers qualitative efficiency advantages over blockchains based on proof of physical resources (e.g., proof of work). We also present a novel reward mechanism for incentivizing proof of stake protocols and we prove that, given this mechanism, honest behavior is an approximate Nash equilibrium, thus neutralizing attacks such as selfish mining. We also present initial evidence of the practicality of our protocol in real world settings by providing experimental results on transaction confirmation and processing.},
  address    = {Cham},
  author     = {Aggelos Kiayias and Alexander Russell and Bernardo David and Roman Oliynykov},
  booktitle  = {Advances in {Cryptology} {\textendash} {CRYPTO} 2017},
  doi        = {10.1007/978-3-319-63688-7_12},
  isbn       = {978-3-319-63687-0 978-3-319-63688-7},
  language   = {en},
  note       = {Series Title: Lecture Notes in Computer Science},
  pages      = {357--388},
  publisher  = {Springer International Publishing},
  shorttitle = {Ouroboros},
  title      = {Ouroboros: {A} {Provably} {Secure} {Proof}-of-{Stake} {Blockchain} {Protocol}},
  url        = {http://link.springer.com/10.1007/978-3-319-63688-7_12},
  urldate    = {2020-07-08},
  volume     = {10401},
  year       = {2017}
}

@article{PoS-PoW-energy,
  abstract  = {Although there are several special features in block-chain technology such as machine trust, traceability, and security, high energy consumption remains an issue in broadening the applications of block-chain technology. Some researchers proposed the use of proof of stake (PoS) mechanism rather than proof of work (PoW) mechanism to reduce energy consumption of block-chain. However, because PoS cannot guarantee fairness, mixed consensus mechanisms could be a solution and has been adopted in many studies. This paper aims to evaluate the performances of PoW, PoS and mixed consensus mechanisms from three aspects: energy consumption, fairness, and reliability. An agent-based model of a typical block-chain system equipped with different consensus mechanisms is created in NetLogo. This model simulates and evaluates the performances of different consensus mechanisms in the block-chain system.},
  author    = {Rong Zhang and Wai Kin (Victor) Chan},
  doi       = {10.1088/1742-6596/1584/1/012023},
  journal   = {Journal of Physics: Conference Series},
  month     = {jul},
  number    = {1},
  pages     = {012023},
  publisher = {{IOP} Publishing},
  title     = {Evaluation of Energy Consumption in Block-Chains with Proof of Work and Proof of Stake},
  url       = {https://doi.org/10.1088/1742-6596/1584/1/012023},
  volume    = {1584},
  year      = 2020
}

@inproceedings{PoS-PoW-evaluation,
  author       = {Nair, P Rajitha and Dorai, D Ramya},
  booktitle    = {2021 Third International Conference on Intelligent Communication Technologies and Virtual Mobile Networks (ICICV)},
  organization = {IEEE},
  pages        = {279--283},
  title        = {Evaluation of performance and security of proof of work and proof of stake using blockchain},
  year         = {2021}
}

@article{PoS-PoW-pros-cons,
  author  = {Vashchuk, Oleksandr and Shuwar, Roman},
  journal = {Electronics and Information Technologies},
  number  = {9},
  pages   = {106--112},
  title   = {Pros and cons of consensus algorithm proof of stake. Difference in the network safety in proof of work and proof of stake},
  volume  = {9},
  year    = {2018}
}


@manual{prog-prove-isabelle,
  author    = {Nipkow, Tobias},
  booktitle = {Technical report, University of Cambridge},
  title     = {Programming and proving in Isabelle/HOL},
  url       = {https://isabelle.in.tum.de/doc/prog-prove.pdf},
  year      = {2013}
}

@inproceedings{proof_and_disproof,
  author       = {Blanchette, Jasmin Christian and Bulwahn, Lukas and Nipkow, Tobias},
  booktitle    = {International Symposium on Frontiers of Combining Systems},
  doi          = {10.1007/978-3-642-24364-6_2},
  isbn         = {978-3-642-24363-9},
  month        = {10},
  organization = {Springer},
  pages        = {12--27},
  title        = {Automatic proof and disproof in Isabelle/HOL},
  year         = {2011}
}

@article{proof_processing_Isabelle,
  author  = {Wenzel, Makarius},
  doi     = {10.1016/j.entcs.2012.06.009},
  journal = {Electronic Notes in Theoretical Computer Science},
  month   = {09},
  pages   = {101-114},
  title   = {Asynchronous Proof Processing with Isabelle/Scala and Isabelle/jEdit},
  volume  = {285},
  year    = {2012}
}

@inproceedings{quickcheck_haskell,
  abstract  = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.},
  address   = {New York, NY, USA},
  author    = {Claessen, Koen and Hughes, John},
  booktitle = {Proceedings of the Fifth ACM SIGPLAN International Conference on Functional Programming},
  doi       = {10.1145/351240.351266},
  isbn      = {1581132026},
  numpages  = {12},
  pages     = {268-279},
  publisher = {Association for Computing Machinery},
  series    = {ICFP '00},
  title     = {QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs},
  url       = {https://doi.org/10.1145/351240.351266},
  year      = {2000}
}

@inproceedings{sledgehammer_judgement_day,
  abstract  = {Sledgehammer, a component of the interactive theorem prover Isabelle, finds proofs in higher-order logic by calling the automated provers for first-order logic E, SPASS and Vampire. This paper is the largest and most detailed empirical evaluation of such a link to date. Our test data consists of 1240 proof goals arising in 7 diverse Isabelle theories, thus representing typical Isabelle proof obligations. We measure the effectiveness of Sledgehammer and many other parameters such as run time and complexity of proofs. A facility for minimizing the number of facts needed to prove a goal is presented and analyzed.},
  address   = {Berlin, Heidelberg},
  author    = {B{\"o}hme, Sascha
               and Nipkow, Tobias},
  booktitle = {Automated Reasoning},
  doi       = {10.1007/978-3-642-14203-1_9},
  editor    = {Giesl, J{\"u}rgen
               and H{\"a}hnle, Reiner},
  isbn      = {978-3-642-14203-1},
  pages     = {107--121},
  publisher = {Springer Berlin Heidelberg},
  title     = {Sledgehammer: Judgement Day},
  year      = {2010}
}
@techreport{SMT-LIB,
  author      = {Ranise, Silvio and Tinelli, Cesare},
  institution = {Technical report, Department of Computer Science, The University of Iowa~...},
  title       = {The smt-lib standard: Version 1.2},
  year        = {2006}
}
@inproceedings{standardized_crypto_loans,
  author    = {Kondratiuk, Dmytro and Seijas, Pablo Lamela and Nemish, Alexander and Thompson, Simon},
  booktitle = {5th Workshop on Trusted Smart Contracts, Financial Cryptography and Data Security 2021},
  title     = {Standardized crypto-loans on the Cardano blockchain},
  year      = {2021}
}
@article{tableau_provers,
  address   = {Cambridge, MA, USA},
  author    = {Lawrence C. Paulson},
  booktitle = {Automated reasoning and its applications: essays in
               honor of {Larry Wos}},
  isbn      = {0-262-22055-5},
  journal   = {arXiv preprint cs/9711106},
  pages     = {23--47},
  publisher = {MIT Press},
  title     = {Generic automatic proof tools},
  year      = {1997}
}
@inbook{The_Extended_UTXO_Model,
  author = {Chakravarty, Manuel and Chapman, James and MacKenzie, Kenneth and Melkonian, Orestis and Jones, Michael and Wadler, Philip},
  doi    = {10.1007/978-3-030-54455-3_37},
  isbn   = {978-3-030-54454-6},
  month  = {08},
  pages  = {525-539},
  title  = {The Extended UTXO Model},
  year   = {2020}
}
@misc{Translating_and_Unifying_UTXO-based,
  author       = {Joachim Zahnentferner},
  howpublished = {Cryptology ePrint Archive, Report 2018/262},
  note         = {\url{https://ia.cr/2018/262}},
  title        = {Chimeric Ledgers: Translating and Unifying UTXO-based and Account-based Cryptocurrencies},
  year         = {2018}
}
@article{translating-haskell-to-isabelle,
  author    = {Torrini, Paolo and Lueth, Christoph and Maeder, Christian and Mossakowski, Till},
  journal   = {CADE-21},
  pages     = {14},
  publisher = {Citeseer},
  title     = {Translating haskell to isabelle},
  year      = {2007}
}
@article{UTxO_Lars,
  author     = {Lars Br{\"{u}}njes and
                Murdoch James Gabbay},
  bibsource  = {dblp computer science bibliography, https://dblp.org},
  biburl     = {https://dblp.org/rec/journals/corr/abs-2003-14271.bib},
  eprint     = {2003.14271},
  eprinttype = {arXiv},
  journal    = {CoRR},
  timestamp  = {Thu, 02 Apr 2020 15:34:08 +0200},
  title      = {UTxO- vs account-based smart contract blockchain programming paradigms},
  url        = {https://arxiv.org/abs/2003.14271},
  volume     = {abs/2003.14271},
  year       = {2020}
}
@inproceedings{Z3,
  abstract  = {Satisfiability Modulo Theories (SMT) problem is a decision problem for logical first order formulas with respect to combinations of background theories such as: arithmetic, bit-vectors, arrays, and uninterpreted functions. Z3 is a new and efficient SMT Solver freely available from Microsoft Research. It is used in various software verification and analysis applications.},
  address   = {Berlin, Heidelberg},
  author    = {de Moura, Leonardo
               and Bj{\o}rner, Nikolaj},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
  doi       = {10.1007/978-3-540-78800-3_24},
  editor    = {Ramakrishnan, C. R.
               and Rehof, Jakob},
  isbn      = {978-3-540-78800-3},
  pages     = {337--340},
  publisher = {Springer Berlin Heidelberg},
  title     = {Z3: An Efficient SMT Solver},
  year      = {2008}
}
@inproceedings{termination-isabelle,
  title={Finding lexicographic orders for termination proofs in Isabelle/HOL},
  author={Bulwahn, Lukas and Krauss, Alexander and Nipkow, Tobias},
  booktitle={International Conference on Theorem Proving in Higher Order Logics},
  pages={38--53},
  year={2007},
  organization={Springer}
}
